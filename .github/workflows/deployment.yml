name: Deployment

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Lint code
        run: pnpm run lint

      - name: Type check
        run: pnpm run type-check

      - name: Build Playground
        run: pnpm --filter playground build

      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          path: ./apps/playground/dist

  deploy-staging:
    name: Deploy/Staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged)
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download build files
        uses: actions/download-artifact@v2
        with:
          path: ./apps/playground/dist

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          folder: ./apps/playground/dist
          force: false
          clean-exclude: pr-preview/

  deploy-review:
    name: Deploy/Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download build files
        uses: actions/download-artifact@v2
        with:
          path: ./apps/playground/dist

      - name: Deploy on PR open/reopen/synchronize
        if: github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize'
        uses: rossjrw/pr-preview-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source-dir: ./apps/playground/dist
          action: deploy

      - name: Remove on PR close (not merged)
        if: github.event.action == 'closed' && !github.event.pull_request.merged
        uses: rossjrw/pr-preview-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source-dir: ./apps/playground/dist
          action: remove
